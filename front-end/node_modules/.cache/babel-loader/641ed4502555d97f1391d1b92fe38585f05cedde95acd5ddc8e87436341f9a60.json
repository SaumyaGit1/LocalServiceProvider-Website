{"ast":null,"code":"var _jsxFileName = \"D:\\\\LocalizedServiceDiscovery\\\\front-end\\\\src\\\\ProfileSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ProfileSetup.css'; // Ensure you have the corresponding CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileSetup = () => {\n  _s();\n  // State for text inputs\n  const [formData, setFormData] = useState({\n    name: '',\n    location: ''\n  });\n  // State for the list of available categories from the DB\n  const [allCategories, setAllCategories] = useState([]);\n  // State for the IDs of the categories the user has checked\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // --- Fetch all available service categories when the component loads ---\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/profile/categories');\n        if (!res.ok) throw new Error('Could not fetch categories');\n        const data = await res.json();\n        setAllCategories(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // --- Handler for text input changes (name, location) ---\n  const handleTextChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // --- Handler for checkbox changes ---\n  const handleCategoryChange = categoryId => {\n    // Check if the category is already selected\n    if (selectedCategories.includes(categoryId)) {\n      // If yes, remove it (uncheck)\n      setSelectedCategories(selectedCategories.filter(id => id !== categoryId));\n    } else {\n      // If no, add it (check)\n      setSelectedCategories([...selectedCategories, categoryId]);\n    }\n  };\n\n  // --- Handler for form submission ---\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Construct the payload to send to the backend\n    const profileData = {\n      name: formData.name,\n      location: formData.location,\n      categories: selectedCategories // This will be an array of IDs, e.g., [2, 3, 5]\n    };\n    try {\n      const token = localStorage.getItem('authToken');\n      const res = await fetch('http://localhost:5000/api/profile/setup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(profileData)\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        // If the server responds with an error, display it\n        throw new Error(data.message || 'Failed to save profile.');\n      }\n\n      // On success, redirect to the main dashboard\n      navigate('/dashboard');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-setup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-setup-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"profile-setup-title\",\n        children: \"Complete Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-setup-subtitle\",\n        children: \"Tell us more about your business to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Full Name or Business Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            className: \"form-input\",\n            value: formData.name,\n            onChange: handleTextChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"location\",\n            children: \"Location (e.g., City, ZIP Code)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"location\",\n            name: \"location\",\n            className: \"form-input\",\n            value: formData.location,\n            onChange: handleTextChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Your Service Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categories-grid\",\n            children: allCategories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `category-${category.id}`,\n                checked: selectedCategories.includes(category.id),\n                onChange: () => handleCategoryChange(category.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `category-${category.id}`,\n                children: category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)]\n            }, category.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Save and Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileSetup, \"jXmCQ1kHX2sqjD1K7tHMWnKghHU=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfileSetup;\nexport default ProfileSetup;\nvar _c;\n$RefreshReg$(_c, \"ProfileSetup\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","ProfileSetup","_s","formData","setFormData","name","location","allCategories","setAllCategories","selectedCategories","setSelectedCategories","error","setError","navigate","fetchCategories","res","fetch","ok","Error","data","json","err","message","handleTextChange","e","target","value","handleCategoryChange","categoryId","includes","filter","id","handleSubmit","preventDefault","profileData","categories","token","localStorage","getItem","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","map","category","checked","_c","$RefreshReg$"],"sources":["D:/LocalizedServiceDiscovery/front-end/src/ProfileSetup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ProfileSetup.css'; // Ensure you have the corresponding CSS file\r\n\r\nconst ProfileSetup = () => {\r\n    // State for text inputs\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        location: '',\r\n    });\r\n    // State for the list of available categories from the DB\r\n    const [allCategories, setAllCategories] = useState([]);\r\n    // State for the IDs of the categories the user has checked\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n    \r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // --- Fetch all available service categories when the component loads ---\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const res = await fetch('http://localhost:5000/api/profile/categories');\r\n                if (!res.ok) throw new Error('Could not fetch categories');\r\n                const data = await res.json();\r\n                setAllCategories(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            }\r\n        };\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // --- Handler for text input changes (name, location) ---\r\n    const handleTextChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // --- Handler for checkbox changes ---\r\n    const handleCategoryChange = (categoryId) => {\r\n        // Check if the category is already selected\r\n        if (selectedCategories.includes(categoryId)) {\r\n            // If yes, remove it (uncheck)\r\n            setSelectedCategories(selectedCategories.filter(id => id !== categoryId));\r\n        } else {\r\n            // If no, add it (check)\r\n            setSelectedCategories([...selectedCategories, categoryId]);\r\n        }\r\n    };\r\n\r\n    // --- Handler for form submission ---\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        // Construct the payload to send to the backend\r\n        const profileData = {\r\n            name: formData.name,\r\n            location: formData.location,\r\n            categories: selectedCategories, // This will be an array of IDs, e.g., [2, 3, 5]\r\n        };\r\n\r\n        try {\r\n            const token = localStorage.getItem('authToken');\r\n            const res = await fetch('http://localhost:5000/api/profile/setup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(profileData),\r\n            });\r\n\r\n            const data = await res.json();\r\n            if (!res.ok) {\r\n                // If the server responds with an error, display it\r\n                throw new Error(data.message || 'Failed to save profile.');\r\n            }\r\n\r\n            // On success, redirect to the main dashboard\r\n            navigate('/dashboard');\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-setup-container\">\r\n            <div className=\"profile-setup-card\">\r\n                <h1 className=\"profile-setup-title\">Complete Your Profile</h1>\r\n                <p className=\"profile-setup-subtitle\">Tell us more about your business to get started.</p>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Full Name or Business Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            className=\"form-input\"\r\n                            value={formData.name}\r\n                            onChange={handleTextChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"location\">Location (e.g., City, ZIP Code)</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"location\"\r\n                            name=\"location\"\r\n                            className=\"form-input\"\r\n                            value={formData.location}\r\n                            onChange={handleTextChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label>Your Service Categories</label>\r\n                        <div className=\"categories-grid\">\r\n                            {allCategories.map(category => (\r\n                                <div key={category.id} className=\"category-item\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id={`category-${category.id}`}\r\n                                        checked={selectedCategories.includes(category.id)}\r\n                                        onChange={() => handleCategoryChange(category.id)}\r\n                                    />\r\n                                    <label htmlFor={`category-${category.id}`}>{category.name}</label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                    <button type=\"submit\" className=\"form-button\">Save and Continue</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileSetup;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}