{"ast":null,"code":"var _jsxFileName = \"D:\\\\LocalizedServiceDiscovery\\\\front-end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport CustomerDashboard from './CustomerDashboard';\n// Import the new ProviderDashboard\nimport ProviderDashboard from './ProviderDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleLogout = () => {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userEmail');\n      navigate('/');\n    };\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.exp * 1000 < Date.now()) {\n        handleLogout();\n      } else {\n        setUser(decodedToken);\n      }\n    } catch (error) {\n      console.error(\"Invalid token:\", error);\n      handleLogout();\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '4rem'\n      },\n      children: \"Loading Dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  if (user) {\n    // This switch now renders the correct dashboard based on the user's role\n    switch (user.role) {\n      case 'Customer':\n        return /*#__PURE__*/_jsxDEV(CustomerDashboard, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n      case 'Service Provider':\n        return /*#__PURE__*/_jsxDEV(ProviderDashboard, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unknown role. Please contact support.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n    }\n  }\n  return null;\n};\n_s(Dashboard, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","CustomerDashboard","ProviderDashboard","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","loading","setLoading","navigate","handleLogout","localStorage","removeItem","token","getItem","decodedToken","exp","Date","now","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["D:/LocalizedServiceDiscovery/front-end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport CustomerDashboard from './CustomerDashboard';\r\n// Import the new ProviderDashboard\r\nimport ProviderDashboard from './ProviderDashboard'; \r\n\r\nconst Dashboard = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const handleLogout = () => {\r\n            localStorage.removeItem('authToken');\r\n            localStorage.removeItem('userEmail');\r\n            navigate('/');\r\n        };\r\n\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const decodedToken = jwtDecode(token);\r\n            if (decodedToken.exp * 1000 < Date.now()) {\r\n                handleLogout();\r\n            } else {\r\n                setUser(decodedToken);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Invalid token:\", error);\r\n            handleLogout();\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [navigate]);\r\n\r\n    if (loading) {\r\n        return <div style={{textAlign: 'center', marginTop: '4rem'}}>Loading Dashboard...</div>;\r\n    }\r\n\r\n    if (user) {\r\n        // This switch now renders the correct dashboard based on the user's role\r\n        switch (user.role) {\r\n            case 'Customer':\r\n                return <CustomerDashboard user={user} />;\r\n            case 'Service Provider':\r\n                return <ProviderDashboard user={user} />;\r\n            default:\r\n                return <div>Unknown role. Please contact support.</div>;\r\n        }\r\n    }\r\n\r\n    return null; \r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD;AACA,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMe,YAAY,GAAGA,CAAA,KAAM;MACvBC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;MACpCD,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;MACpCH,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,MAAMI,KAAK,GAAGF,YAAY,CAACG,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAI,CAACD,KAAK,EAAE;MACRJ,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACJ;IAEA,IAAI;MACA,MAAMM,YAAY,GAAGjB,SAAS,CAACe,KAAK,CAAC;MACrC,IAAIE,YAAY,CAACC,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QACtCR,YAAY,CAAC,CAAC;MAClB,CAAC,MAAM;QACHJ,OAAO,CAACS,YAAY,CAAC;MACzB;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCT,YAAY,CAAC,CAAC;IAClB,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,IAAIF,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAKmB,KAAK,EAAE;QAACC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAM,CAAE;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3F;EAEA,IAAIvB,IAAI,EAAE;IACN;IACA,QAAQA,IAAI,CAACwB,IAAI;MACb,KAAK,UAAU;QACX,oBAAO3B,OAAA,CAACH,iBAAiB;UAACM,IAAI,EAAEA;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5C,KAAK,kBAAkB;QACnB,oBAAO1B,OAAA,CAACF,iBAAiB;UAACK,IAAI,EAAEA;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5C;QACI,oBAAO1B,OAAA;UAAAsB,QAAA,EAAK;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IAC/D;EACJ;EAEA,OAAO,IAAI;AACf,CAAC;AAACxB,EAAA,CAlDID,SAAS;EAAA,QAGMN,WAAW;AAAA;AAAAiC,EAAA,GAH1B3B,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}