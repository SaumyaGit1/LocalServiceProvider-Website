{"ast":null,"code":"var _jsxFileName = \"D:\\\\LocalizedServiceDiscovery\\\\front-end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css'; // We'll create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState('');\n\n  // This effect runs when the component mounts\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      // If no token is found, redirect to login page\n      navigate('/login');\n    } else {\n      // In a real app, you would decode the token to get user info\n      // For now, we'll just show a generic welcome\n      // A more advanced approach would be to store user info in localStorage as well\n      const storedUser = localStorage.getItem('userEmail');\n      if (storedUser) {\n        setUserEmail(storedUser);\n      }\n    }\n  }, [navigate]); // The effect depends on the navigate function\n\n  const handleLogout = () => {\n    // Clear user data from local storage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n\n    // Navigate back to the home page\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Welcome to Your Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), userEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-welcome-text\",\n        children: [\"You are logged in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: userEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-text\",\n        children: \"This is your personal dasboard where your activities will be shown.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"dashboard-logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"PYm8ggncAlliUy9z5XmF+9YWSUw=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","userEmail","setUserEmail","token","localStorage","getItem","storedUser","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/LocalizedServiceDiscovery/front-end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Dashboard.css'; // We'll create this file for styling\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    const [userEmail, setUserEmail] = useState('');\r\n\r\n    // This effect runs when the component mounts\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n            // If no token is found, redirect to login page\r\n            navigate('/login');\r\n        } else {\r\n            // In a real app, you would decode the token to get user info\r\n            // For now, we'll just show a generic welcome\r\n            // A more advanced approach would be to store user info in localStorage as well\r\n            const storedUser = localStorage.getItem('userEmail');\r\n            if(storedUser) {\r\n                setUserEmail(storedUser);\r\n            }\r\n        }\r\n    }, [navigate]); // The effect depends on the navigate function\r\n\r\n    const handleLogout = () => {\r\n        // Clear user data from local storage\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('userEmail');\r\n        \r\n        // Navigate back to the home page\r\n        navigate('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div className=\"dashboard-card\">\r\n                <h1 className=\"dashboard-title\">Welcome to Your Dashboard</h1>\r\n                {userEmail && <p className=\"dashboard-welcome-text\">You are logged in as: <strong>{userEmail}</strong></p>}\r\n                <p className=\"dashboard-text\">This is your personal dasboard where your activities will be shown.</p>\r\n                <button onClick={handleLogout} className=\"dashboard-logout-button\">\r\n                    Logout\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAI,CAACF,KAAK,EAAE;MACR;MACAH,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,MAAM;MACH;MACA;MACA;MACA,MAAMM,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACpD,IAAGC,UAAU,EAAE;QACXJ,YAAY,CAACI,UAAU,CAAC;MAC5B;IACJ;EACJ,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAH,YAAY,CAACI,UAAU,CAAC,WAAW,CAAC;IACpCJ,YAAY,CAACI,UAAU,CAAC,WAAW,CAAC;;IAEpC;IACAR,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACIH,OAAA;IAAKY,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCb,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3Bb,OAAA;QAAIY,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7Db,SAAS,iBAAIJ,OAAA;QAAGY,SAAS,EAAC,wBAAwB;QAAAC,QAAA,GAAC,wBAAsB,eAAAb,OAAA;UAAAa,QAAA,EAAST;QAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1GjB,OAAA;QAAGY,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAmE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrGjB,OAAA;QAAQkB,OAAO,EAAER,YAAa;QAACE,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACf,EAAA,CA1CID,SAAS;EAAA,QACMH,WAAW;AAAA;AAAAqB,EAAA,GAD1BlB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}