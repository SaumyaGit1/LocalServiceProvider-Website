{"ast":null,"code":"var _jsxFileName = \"D:\\\\LocalizedServiceDiscovery\\\\front-end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // <-- Correct named import\nimport CustomerDashboard from './CustomerDashboard';\nimport './Dashboard.css';\n\n// A placeholder for the provider dashboard we will build next\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProviderDashboard = ({\n  userEmail,\n  handleLogout\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"dashboard-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"dashboard-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Provider Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"logout-button\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", userEmail, \"! The provider dashboard is under construction.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Soon you'll be able to create and manage your service listings here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this);\n_c = ProviderDashboard;\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUser(decodedToken);\n      } catch (error) {\n        console.error(\"Invalid token\", error);\n        handleLogout();\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    navigate('/');\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this); // Or a proper spinner component\n  }\n\n  // Render the correct dashboard based on the user's role\n  return user.role === 'Customer' ? /*#__PURE__*/_jsxDEV(CustomerDashboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(ProviderDashboard, {\n    userEmail: user.email,\n    handleLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }, this);\n};\n_s(Dashboard, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProviderDashboard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jwtDecode","CustomerDashboard","jsxDEV","_jsxDEV","ProviderDashboard","userEmail","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Dashboard","_s","user","setUser","navigate","token","localStorage","getItem","decodedToken","error","console","removeItem","role","email","_c2","$RefreshReg$"],"sources":["D:/LocalizedServiceDiscovery/front-end/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; // <-- Correct named import\r\nimport CustomerDashboard from './CustomerDashboard';\r\nimport './Dashboard.css';\r\n\r\n// A placeholder for the provider dashboard we will build next\r\nconst ProviderDashboard = ({ userEmail, handleLogout }) => (\r\n    <div className=\"dashboard-container\">\r\n        <header className=\"dashboard-header\">\r\n            <h1>Provider Dashboard</h1>\r\n            <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n        </header>\r\n        <main className=\"dashboard-content\">\r\n            <p>Welcome, {userEmail}! The provider dashboard is under construction.</p>\r\n            <p>Soon you'll be able to create and manage your service listings here.</p>\r\n        </main>\r\n    </div>\r\n);\r\n\r\nconst Dashboard = () => {\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n            try {\r\n                const decodedToken = jwtDecode(token);\r\n                setUser(decodedToken);\r\n            } catch (error) {\r\n                console.error(\"Invalid token\", error);\r\n                handleLogout();\r\n            }\r\n        } else {\r\n            navigate('/login');\r\n        }\r\n    }, [navigate]);\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('userEmail');\r\n        navigate('/');\r\n    };\r\n\r\n    if (!user) {\r\n        return <div>Loading...</div>; // Or a proper spinner component\r\n    }\r\n\r\n    // Render the correct dashboard based on the user's role\r\n    return user.role === 'Customer'\r\n        ? <CustomerDashboard />\r\n        : <ProviderDashboard userEmail={user.email} handleLogout={handleLogout} />;\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}