{"ast":null,"code":"var _jsxFileName = \"D:\\\\LocalizedServiceDiscovery\\\\front-end\\\\src\\\\CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CustomerDashboard.css';\n\n// A single service card component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceCard = ({\n  listing\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"service-card\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"card-title\",\n      children: listing.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"card-category\",\n      children: listing.category_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"card-provider\",\n    children: [\"by \", listing.provider_name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"card-location\",\n    children: listing.location\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"card-description\",\n    children: listing.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"card-price\",\n      children: [\"$\", listing.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"card-button\",\n      children: \"Book Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n_c = ServiceCard;\nconst CustomerDashboard = () => {\n  _s();\n  const [listings, setListings] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({\n    search: '',\n    category: '',\n    location: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch listings based on current filters\n  useEffect(() => {\n    const fetchListings = async () => {\n      setIsLoading(true);\n      const query = new URLSearchParams(filters).toString();\n      try {\n        const res = await fetch(`http://localhost:5000/api/listings?${query}`);\n        const data = await res.json();\n        setListings(data);\n      } catch (error) {\n        console.error(\"Failed to fetch listings\", error);\n      }\n      setIsLoading(false);\n    };\n    fetchListings();\n  }, [filters]);\n\n  // Fetch categories for the filter dropdown\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/profile/categories');\n        const data = await res.json();\n        setCategories(data);\n      } catch (error) {\n        console.error(\"Failed to fetch categories\", error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const handleFilterChange = e => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"Search for services...\",\n        className: \"filter-input\",\n        onChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        placeholder: \"Location...\",\n        className: \"filter-input\",\n        onChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        className: \"filter-select\",\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat.id,\n          children: cat.name\n        }, cat.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings-grid\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading services...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this) : listings.length > 0 ? listings.map(listing => /*#__PURE__*/_jsxDEV(ServiceCard, {\n        listing: listing\n      }, listing.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No services found matching your criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerDashboard, \"c/uxV/8JktmCvCFJYLMDUyBaXc4=\");\n_c2 = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ServiceCard\");\n$RefreshReg$(_c2, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ServiceCard","listing","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","category_name","provider_name","location","description","price","_c","CustomerDashboard","_s","listings","setListings","categories","setCategories","filters","setFilters","search","category","isLoading","setIsLoading","fetchListings","query","URLSearchParams","toString","res","fetch","data","json","error","console","fetchCategories","handleFilterChange","e","target","name","value","type","placeholder","onChange","map","cat","id","length","_c2","$RefreshReg$"],"sources":["D:/LocalizedServiceDiscovery/front-end/src/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CustomerDashboard.css';\r\n\r\n// A single service card component\r\nconst ServiceCard = ({ listing }) => (\r\n    <div className=\"service-card\">\r\n        <div className=\"card-header\">\r\n            <h3 className=\"card-title\">{listing.title}</h3>\r\n            <span className=\"card-category\">{listing.category_name}</span>\r\n        </div>\r\n        <p className=\"card-provider\">by {listing.provider_name}</p>\r\n        <p className=\"card-location\">{listing.location}</p>\r\n        <p className=\"card-description\">{listing.description}</p>\r\n        <div className=\"card-footer\">\r\n            <span className=\"card-price\">${listing.price}</span>\r\n            <button className=\"card-button\">Book Now</button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomerDashboard = () => {\r\n    const [listings, setListings] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        search: '',\r\n        category: '',\r\n        location: ''\r\n    });\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Fetch listings based on current filters\r\n    useEffect(() => {\r\n        const fetchListings = async () => {\r\n            setIsLoading(true);\r\n            const query = new URLSearchParams(filters).toString();\r\n            try {\r\n                const res = await fetch(`http://localhost:5000/api/listings?${query}`);\r\n                const data = await res.json();\r\n                setListings(data);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch listings\", error);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        fetchListings();\r\n    }, [filters]);\r\n\r\n    // Fetch categories for the filter dropdown\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const res = await fetch('http://localhost:5000/api/profile/categories');\r\n                const data = await res.json();\r\n                setCategories(data);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch categories\", error);\r\n            }\r\n        };\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    const handleFilterChange = (e) => {\r\n        setFilters({ ...filters, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"customer-dashboard\">\r\n            <div className=\"filters-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    placeholder=\"Search for services...\"\r\n                    className=\"filter-input\"\r\n                    onChange={handleFilterChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"location\"\r\n                    placeholder=\"Location...\"\r\n                    className=\"filter-input\"\r\n                    onChange={handleFilterChange}\r\n                />\r\n                <select name=\"category\" className=\"filter-select\" onChange={handleFilterChange}>\r\n                    <option value=\"\">All Categories</option>\r\n                    {categories.map(cat => (\r\n                        <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"listings-grid\">\r\n                {isLoading ? (\r\n                    <p>Loading services...</p>\r\n                ) : listings.length > 0 ? (\r\n                    listings.map(listing => (\r\n                        <ServiceCard key={listing.id} listing={listing} />\r\n                    ))\r\n                ) : (\r\n                    <p>No services found matching your criteria.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}